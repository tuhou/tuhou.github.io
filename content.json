{"meta":{"title":"码字的秃猴","subtitle":"别向世界妥协！","description":"Don't compromise with the world!","author":"tuhou","url":"http://tuhou.github.io","root":"/"},"pages":[{"title":"","date":"2025-01-26T01:00:03.821Z","updated":"2025-01-26T01:00:03.745Z","comments":true,"path":"nba.html","permalink":"http://tuhou.github.io/nba.html","excerpt":"","text":"体育直播 2025- 1 -26 星期日 (部分信号开赛更新,点此 刷新 获得最新信号) 06:30 NBA常规赛 凯尔特人 VS 独行侠 文字直播 比分直播 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 腾讯体育(无插件) 07:00 NBA常规赛 热火 VS 篮网 文字直播 比分直播 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 08:00 NBA常规赛 鹈鹕 VS 黄蜂 文字直播 比分直播 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 08:00 NBA常规赛 活塞 VS 魔术 文字直播 比分直播 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 08:30 NBA常规赛 猛龙 VS 老鹰 文字直播 比分直播 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 08:30 NBA常规赛 火箭 VS 骑士 文字直播 比分直播 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 08:30 NBA常规赛 国王 VS 尼克斯 文字直播 比分直播 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 09:00 NBA常规赛 76人 VS 公牛 文字直播 比分直播 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 09:00 NBA常规赛 爵士 VS 灰熊 文字直播 比分直播 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 09:30 NBA常规赛 湖人 VS 勇士 文字直播 比分直播 CCTV5(CCTVreg) 央视频(app) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 10:00 NBA常规赛 奇才 VS 太阳 文字直播 比分直播 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 11:00 NHL常规赛 华盛顿首都人 VS 温哥华加人 CCTV5+(CCTVreg) 央视频(app) 11:30 NBA常规赛 雄鹿 VS 快船 文字直播 比分直播 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 篮球直播(无插件) 腾讯体育(无插件) 13:25 世界职业拳王争霸赛 CCTV5(CCTVreg) 央视频(app) 14:00 印尼羽毛球大师赛混双决赛 郭新娃/陈芳卉 VS 绿川大辉/斋藤夏 优酷直播(无插件) 16:30 澳网男单决赛 辛纳 VS 兹维列夫 CCTV5(CCTVreg) 央视频(app) 17:00 国际友谊赛 中国男足U20 VS 曼谷联U23 足球直播(无插件) 足球直播(无插件) 19:30 意甲第22轮 AC米兰 VS 帕尔马 足球直播(无插件) 足球直播(无插件) 21:00 西甲第21轮 巴列卡诺 VS 赫罗纳 足球直播(无插件) 足球直播(无插件) 22:00 法甲第19轮 勒阿弗尔 VS 布雷斯特 足球直播(无插件) 足球直播(无插件) 咪咕直播(无插件) 22:00 意甲第22轮 乌迪内斯 VS 罗马 足球直播(无插件) 足球直播(无插件) 22:00 英超第23轮 热刺 VS 莱斯特城 CCTV5+(CCTVreg) 央视频(app) 爱奇艺直播(无插件) 咪咕直播(无插件) 足球直播(无插件) 足球直播(无插件) 22:00 英超第23轮 水晶宫 VS 布伦特福德 爱奇艺直播(无插件) 咪咕直播(无插件) 足球直播(无插件) 足球直播(无插件) 22:30 德甲第19轮 霍芬海姆 VS 法兰克福 足球直播(无插件) 足球直播(无插件) 咪咕直播(无插件) 23:15 西甲第21轮 皇家社会 VS 赫塔费 CCTV5(CCTVreg) 央视频(app) 爱奇艺直播(无插件) 咪咕直播(无插件) 足球直播(无插件) 足球直播(无插件) 23:45 沙特联第17轮 吉达国民 VS 利雅得体育 足球直播(无插件) 足球直播(无插件) 2025- 1 -27 星期一 (部分信号开赛更新,点此 刷新 获得最新信号) 00:15 法甲第19轮 朗斯 VS 昂热 足球直播(无插件) 足球直播(无插件) 00:15 法甲第19轮 南特 VS 里昂 足球直播(无插件) 足球直播(无插件) 00:15 法甲第19轮 图卢兹 VS 蒙彼利埃 足球直播(无插件) 足球直播(无插件) 00:30 德甲第19轮 圣保利 VS 柏林联合 足球直播(无插件) 足球直播(无插件) 00:30 英超第23轮 阿斯顿维拉 VS 西汉姆联 足球直播(无插件) 足球直播(无插件) 01:00 沙特联第17轮 利雅得胜利 VS 哈萨征服 足球直播(无插件) 足球直播(无插件) 01:00 意甲第22轮 莱切 VS 国际米兰 足球直播(无插件) 足球直播(无插件) 01:30 西甲第21轮 毕尔巴鄂竞技 VS 莱加内斯 足球直播(无插件) 足球直播(无插件) 03:00 英超第23轮 富勒姆 VS 曼联 足球直播(无插件) 足球直播(无插件) 03:45 法甲第19轮 尼斯 VS 马赛 足球直播(无插件) 足球直播(无插件) 03:45 意甲第22轮 拉齐奥 VS 佛罗伦萨 足球直播(无插件) 足球直播(无插件) 04:00 西甲第21轮 巴塞罗那 VS 瓦伦西亚 足球直播(无插件) 足球直播(无插件) 07:00 NBA常规赛 雷霆 VS 开拓者 篮球直播(无插件) 篮球直播(无插件) 07:30 NFL季后赛 比尔 VS 酋长 体育直播(无插件) 体育直播(无插件) 19:00 天下足球 足球直播(无插件) 足球直播(无插件) 22:00 斯诺克德国大师赛第1轮 米尔金斯 VS 徐思 体育直播(无插件) 体育直播(无插件) 22:00 斯诺克德国大师赛第1轮 罗伯逊 VS 安东尼-科瓦尔斯基 体育直播(无插件) 体育直播(无插件) 22:00 斯诺克德国大师赛第1轮 张安达 VS 格雷姆-多特 体育直播(无插件) 体育直播(无插件) 22:00 斯诺克德国大师赛第1轮 周跃龙 VS 齐津斯 体育直播(无插件) 体育直播(无插件) 22:00 斯诺克德国大师赛第1轮 凯伦-威尔逊 VS 张家玮 体育直播(无插件) 体育直播(无插件) 22:00 斯诺克德国大师赛第1轮 希金斯 VS 马克-戴维斯 体育直播(无插件) 体育直播(无插件) 22:05 沙特联第17轮 达马克 VS 吉达联合 足球直播(无插件) 足球直播(无插件) 体育电视台 CCTV-5(CCTVreg) CCTV-5+(CCTVreg) 江苏体育频道(无插件) 山东体育频道(无插件) 中央电视台 CCTV新闻(CCTVreg) CCTV-1(CCTVreg) CCTV-2(CCTVreg) CCTV-3(CCTVreg) CCTV-4(CCTVreg) CCTV-6(CCTVreg) CCTV-7(CCTVreg) CCTV-8(CCTVreg) CCTV-9(CCTVreg) CCTV-10(CCTVreg) CCTV-11(CCTVreg) CCTV-12(CCTVreg) CCTV-少儿(CCTVreg) CCTV-音乐(CCTVreg)"},{"title":"关于","date":"2024-11-25T15:26:39.000Z","updated":"2024-12-06T13:21:01.420Z","comments":false,"path":"about/index.html","permalink":"http://tuhou.github.io/about/index.html","excerpt":"","text":"个人简介​ 普通IT从业者一枚、略懂编程、爬虫、逆向，目前搞点我自己都看不懂的东西。 个人网店​ 接一些软件安装一类的活、和一些能方便自身的骚操作（瞎折腾系列），有需要可以瞅瞅 ​ 网店地址：https://hnzcc11tkait3rbmzwrkctl0z7e8wgr.taobao.com/ 其他​ 这个人很懒，什么都没留下！"},{"title":"分类","date":"2024-11-25T14:43:45.000Z","updated":"2024-11-25T15:30:56.355Z","comments":false,"path":"categories/index.html","permalink":"http://tuhou.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2024-11-25T14:46:52.000Z","updated":"2024-11-25T15:30:05.299Z","comments":false,"path":"tags/index.html","permalink":"http://tuhou.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"docker镜像加速教程","slug":"docker01","date":"2024-12-31T12:10:20.000Z","updated":"2024-12-31T16:51:16.722Z","comments":true,"path":"2024/12/31/docker01/","permalink":"http://tuhou.github.io/2024/12/31/docker01/","excerpt":"docker镜像下载教程 购买多个秘钥的请注意，一个一个下载，下载存在延迟，以免秘钥浪费","text":"docker镜像下载教程 购买多个秘钥的请注意，一个一个下载，下载存在延迟，以免秘钥浪费 1、镜像搜索地址：http://113.133.183.165:45678/ 输入镜像名称：点击查询，等待一段时间会展示搜索结果，同时将查询到的结果展示到下拉的架构列表 2、镜像下载 选择对应的架构，输入秘钥点击下载，等待一段时间加载下载地址 3、下载文件 默认户自行下载，若是不小心没保存之类，不要刷新页面，直接点击下载链接，同样可以下载","categories":[{"name":"教程","slug":"教程","permalink":"http://tuhou.github.io/categories/%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"docker","slug":"docker","permalink":"http://tuhou.github.io/tags/docker/"}]},{"title":"搭建私有的个人远程RustDesk","slug":"RustDesk","date":"2024-12-07T06:30:20.000Z","updated":"2024-12-07T08:33:12.935Z","comments":true,"path":"2024/12/07/RustDesk/","permalink":"http://tuhou.github.io/2024/12/07/RustDesk/","excerpt":"在Linux服务器搭建RustDesk远程 为什么搭建RustDesk，市面上的Todesk、向日葵不能使用吗？ PC端自用，使用Todesk和向日葵确实能满足需求，但是涉及到移动设备的远控时，免费的Todesk、向日葵不支持移动设备远控，同时在PC远控也有诸多限制，而今天介绍到的RustDesk完全没有这些限制，支持多平台（Linux、Windows、macOS、Android）","text":"在Linux服务器搭建RustDesk远程 为什么搭建RustDesk，市面上的Todesk、向日葵不能使用吗？ PC端自用，使用Todesk和向日葵确实能满足需求，但是涉及到移动设备的远控时，免费的Todesk、向日葵不支持移动设备远控，同时在PC远控也有诸多限制，而今天介绍到的RustDesk完全没有这些限制，支持多平台（Linux、Windows、macOS、Android） 前置条件：一台公网ip的Linux云服务器 1、搭建 本教程基于Linux（centos）、在宝塔上安装RustDesk服务 项目地址：https://github.com/rustdesk/rustdesk-server/releases/ 根据服务器版本下载对应的源码版本，因为我的是x86的，下载linux-amd64就好 1、安装宝塔：https://www.bt.cn/new/download.html CentOS安装宝塔 1url=https://download.bt.cn/install/install_lts.sh;if [ -f /usr/bin/curl ];then curl -sSO $url;else wget -O install_lts.sh $url;fi;bash install_lts.sh ed8484bec 安装完成根据生成的外网地址或者内网地址登录宝塔，此时如果登录不了，请在服务器防火墙放通对应的端口，本例为：35011 第一次登录需要注册一个宝塔账号，注册后登录，如下图所示： 2、配置RustDesk服务 点击文件，选择你喜欢的文件夹创建rustdesk文件，本例为www下 解压文件，可以看到最后就三个文件 因为我们需要rustdesk服务时刻运行，并能自动重启，那么需要搞一个守护程序。软件商店搜索：进程守护 安装 添加守护程序，点击设置-&gt; 添加守护程序 -&gt; 确认 目录和启动命令以我的为例： 守护程序设置好后，状态为Running时为正常 在文件列表中会生成一些文件，记住id_xx.pub里面为中继器的key，保存好后续使用 端口放通：你需要放通21116 - TCP&#x2F;UDP、21117 - TCP 如图在安全中添加，当然在你的服务器安全组也需要放通 3、测试 在软件中输入刚才对应的id和中继服务器以及key，主页状态为就绪说明已经成功，之后找两台设备使用即可 附：小店提供安装和中继器租用服务，有需要可以淘宝扫码查看","categories":[{"name":"瞎折腾","slug":"瞎折腾","permalink":"http://tuhou.github.io/categories/%E7%9E%8E%E6%8A%98%E8%85%BE/"}],"tags":[{"name":"RustDesk","slug":"RustDesk","permalink":"http://tuhou.github.io/tags/RustDesk/"},{"name":"远程协助","slug":"远程协助","permalink":"http://tuhou.github.io/tags/%E8%BF%9C%E7%A8%8B%E5%8D%8F%E5%8A%A9/"}]},{"title":"mimiciv医疗数据库安装（derived衍生表）","slug":"postgresql03","date":"2024-12-06T11:30:20.000Z","updated":"2024-12-07T08:32:54.838Z","comments":true,"path":"2024/12/06/postgresql03/","permalink":"http://tuhou.github.io/2024/12/06/postgresql03/","excerpt":"windows安装mimic医疗数据库衍生表derived前置条件： 1安装git（全部默认安装即可）：下载地址 https://git-scm.com/downloads","text":"windows安装mimic医疗数据库衍生表derived前置条件： 1安装git（全部默认安装即可）：下载地址 https://git-scm.com/downloads 紧接上回、已经安装完了icu和hosp数据，现在生成衍生表 衍生表sql路径D:\\mimic-code-main\\mimic-iv\\concepts_postgres 1、安装 设置路径 执行postgres-functions.sql生成对应的方法\\i D:/mimic-code-main/mimic-iv/concepts_postgres/postgres-functions.sql 执行shell生成衍生表格数据文件夹postgres 生成衍生表格数据 修改postgres-make-concepts.sql 执行 之后就是漫长的等待，直到结束就好。 附：小店提供安装服务，有需要可以淘宝扫码查看","categories":[{"name":"postgresql","slug":"postgresql","permalink":"http://tuhou.github.io/categories/postgresql/"}],"tags":[{"name":"postgresql","slug":"postgresql","permalink":"http://tuhou.github.io/tags/postgresql/"},{"name":"MIMIC","slug":"MIMIC","permalink":"http://tuhou.github.io/tags/MIMIC/"}]},{"title":"mimiciv医疗数据库安装（icu+hosp）","slug":"postgresql02","date":"2024-12-05T07:10:20.000Z","updated":"2024-12-07T08:32:36.102Z","comments":true,"path":"2024/12/05/postgresql02/","permalink":"http://tuhou.github.io/2024/12/05/postgresql02/","excerpt":"windows安装mimic医疗数据库注意：mimic需要硬盘空间120G左右，请预留足够的空间前置条件： 12341、安装7z2、安装postgresql3、mimic数据包 https://physionet.org/content/mimiciv/2.2/4、mimic数据生成包：https://github.com/MIT-LCP/mimic-code","text":"windows安装mimic医疗数据库注意：mimic需要硬盘空间120G左右，请预留足够的空间前置条件： 12341、安装7z2、安装postgresql3、mimic数据包 https://physionet.org/content/mimiciv/2.2/4、mimic数据生成包：https://github.com/MIT-LCP/mimic-code 1、安装以mimiciv2.2为例，请确保前置条件已经搞好。 在D盘创建一个数据根目录MIMIC，用于后续的设置，我是直接将相关的数据都放入了MIMIC 登录到pgsql的shell中 2、安装命令 1、创建数据库 Drop database if exists mimiciv; create database mimiciv owner postgres; 设置默认目录与编码 在命令行依次执行create、load_7z、constraint、index.sql文件 若出现permission deny，将所有的”&quot;替换成 “&#x2F;“ 执行到load_7z.sql导入数据、根据电脑性能，会等待1-2个小时 \\i D:/MIMIC/load_7z.sql 执行\\i D:/MIMIC/constraint.sql创建主键 执行\\i D:/MIMIC/index.sql创建索引 3、查看hosp icu 附：小店提供安装服务，有需要可以淘宝扫码查看","categories":[{"name":"postgresql","slug":"postgresql","permalink":"http://tuhou.github.io/categories/postgresql/"}],"tags":[{"name":"postgresql","slug":"postgresql","permalink":"http://tuhou.github.io/tags/postgresql/"},{"name":"MIMIC","slug":"MIMIC","permalink":"http://tuhou.github.io/tags/MIMIC/"}]},{"title":"postgresql安装","slug":"postgresql01","date":"2024-12-04T07:10:20.000Z","updated":"2024-12-07T08:32:19.690Z","comments":true,"path":"2024/12/04/postgresql01/","permalink":"http://tuhou.github.io/2024/12/04/postgresql01/","excerpt":"沉浸式安装postgresql-windows版注意：pgsql对路径严格要求、安装路径不能存在中文，否则会报错","text":"沉浸式安装postgresql-windows版注意：pgsql对路径严格要求、安装路径不能存在中文，否则会报错 1、下载安装包https://www.enterprisedb.com/downloads/postgres-postgresql-downloads 在下载页面下载你需要版本的pgsql安装包 2、安装 next之后就开始等待吧，结束后直接finish，然后取消Stack Builder就好 到此，windows的pgsql安装已经完成。简单测试下 3、演示只是在完全正常的情况下，安装pgsql会出现各种各样的报错，这个我们后续慢慢道来。附： 小店提供安装服务，有需要可以淘宝扫码查看","categories":[{"name":"postgresql","slug":"postgresql","permalink":"http://tuhou.github.io/categories/postgresql/"}],"tags":[{"name":"postgresql","slug":"postgresql","permalink":"http://tuhou.github.io/tags/postgresql/"}]},{"title":"hexo搭建","slug":"hexo01","date":"2024-11-26T15:10:20.000Z","updated":"2024-12-03T12:30:19.878Z","comments":true,"path":"2024/11/26/hexo01/","permalink":"http://tuhou.github.io/2024/11/26/hexo01/","excerpt":"网址：tuhou.github.io 从搭建hexo到发布到github，以及简单的优化 简单介绍hexo：Hexo 是一个快速、简洁且高效的博客框架。 Hexo 使用 Markdown（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。","text":"网址：tuhou.github.io 从搭建hexo到发布到github，以及简单的优化 简单介绍hexo：Hexo 是一个快速、简洁且高效的博客框架。 Hexo 使用 Markdown（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 依赖：本文以ubuntu为例，需要安装node和git 1、node安装：下载地址：https://nodejs.cn/download/ 下载对应的版本双击安装 安装完成后：创建对应的软链接 ln -s /home/node/（你的安装目录） /usr/local/bin ln -s /home/npm/（你的安装目录） /usr/local/bin 2、安装git12sudo apt-get updatesudo apt-get install git 此时需注意：使用npm的时候可能会报错，此处需要设置npm的源，因为淘宝源已经过期，那么当前将其设置为新的。 npm config set registry https://registry.npmmirror.com/ 3、安装hexonpm install -g hexo-cli 此文章以我的目录为例，创建 12mkdir /home/blogcd /home/blog hexo初始化 123hexo inithexo ghexo s --debug 此时，你可以看到本地http://localhost:4000就能看到对应的网站了 当然安装hexo并不是我们的最终目的，我们要将hexo上传到github，并生成一个github的网站 4、github端设置1、github端创建一个公共的仓库，注意名称命名为 xxx.github.io必须的（xxx设置为你自己想设置的），确认就好 2、在服务器上，配置本地用户信息 使用 git config --global user.name &quot;name&quot; 配置本地用户信息，name为你的git账户名 使用 git config --global user.email &quot;xxx@xx.com&quot;配置本地邮箱，email为你git账户邮箱 使用 ssh-keygen -t rsa -C&quot;xxx@xx.com&quot; 命令生成本地私钥和密钥信息，需要输入yes是输入y 秘钥生成后，在本地~/.ssh，在此路径上找到git的密码文件 id_rsa.pub 3、进行git与github的授权认证 在github设置页面，选择左侧ssh and GPG keys 名称随意，key为id_rsa.pub添加 此时回到服务器，命令行输入ssh -T git@github.com检查可以与远程进行统信，会出现Hi …说明授权成功 4、以为目前github已经不支持密码授权，所以下载需要搞一个token： settings -&gt; Developer settings 创建后记得记住，因为只展示一次 5、在hexo的主配置文件_config.yml中配置 1234deploy: type: git repository: https://github.com/tuhou/tuhou.github.io.git branch: master 5、文章上线到github会让你输入名称和token，可以看到已经有了 1hexo d 后续的美化暂时停下，等后续再聊","categories":[{"name":"hexo","slug":"hexo","permalink":"http://tuhou.github.io/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://tuhou.github.io/tags/hexo/"}]},{"title":"港股打新网","slug":"spider-01","date":"2021-10-20T15:10:20.000Z","updated":"2024-12-03T11:33:58.441Z","comments":true,"path":"2021/10/20/spider-01/","permalink":"http://tuhou.github.io/2021/10/20/spider-01/","excerpt":"网址：aHR0cHM6Ly93d3cubGlhbmdodWFpcG8uY29tLyMvbGlzdGVkX3N0b2NrX2xpc3Q&#x3D; 1、网站进行简要分析 打开开发者工具，抓包","text":"网址：aHR0cHM6Ly93d3cubGlhbmdodWFpcG8uY29tLyMvbGlzdGVkX3N0b2NrX2xpc3Q&#x3D; 1、网站进行简要分析 打开开发者工具，抓包 请求成功后，返回一长段的数据data，需要的数据应该就是对data进行解密了，现在开始找解密点 2、寻找解密点 网页打上XHR断点，点击翻页 网页被断住，向上找堆栈，到pagechange发现有个JSON.parse这不就是解密点？打个断点，放开xhr断点，在进行一次翻页 判断加密点没错 1var s = JSON.parse(Object(o.a)(a.data)); 主要函数为Object(o.a)，断点进入 这不就是一个AES解密函数吗，废话不多说，码代码吧 123456789101112131415const CryptoJS = require(&#x27;crypto-js&#x27;);function get_data(t)&#123; var c = CryptoJS.enc.Utf8.parse(&quot;eFgabcda1bcda12bc2bcdePgefgadefg&quot;); var n = CryptoJS.enc.Utf8.parse(); var e = c, s = n, i = CryptoJS.enc.Base64.parse(t), a = CryptoJS.enc.Base64.stringify(i); return CryptoJS.AES.decrypt(a, e, &#123; iv: s, mode: CryptoJS.mode.ECB, padding: CryptoJS.pad.Pkcs7 &#125;).toString(CryptoJS.enc.Utf8).toString() &#125; 结果： 全部代码： 12345678910111213141516171819202122232425262728293031323334353637import requestsimport execjsdef get_data(): url = &#x27;https://api.lianghuaipo.com/hk_ipo/get_paged_listed_stock_list&#x27; headers = &#123; &#x27;user-agent&#x27;:&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36&#x27;, &#125; data = &#123; &#x27;now_page&#x27;: 1, &#x27;page_cnt&#x27;: 30 &#125; res = requests.post(url=url,headers=headers,data=data).json() return res[&#x27;data&#x27;]js = &#x27;&#x27;&#x27;const CryptoJS = require(&#x27;crypto-js&#x27;);function get_data(t)&#123; var c = CryptoJS.enc.Utf8.parse(&quot;eFgabcda1bcda12bc2bcdePgefgadefg&quot;); var n = CryptoJS.enc.Utf8.parse(); var e = c; var s = n; var i = CryptoJS.enc.Base64.parse(t); var a = CryptoJS.enc.Base64.stringify(i); return CryptoJS.AES.decrypt(a, e, &#123; iv: s, mode: CryptoJS.mode.ECB, padding: CryptoJS.pad.Pkcs7 &#125;).toString(CryptoJS.enc.Utf8).toString()&#125;&#x27;&#x27;&#x27;if __name__ == &#x27;__main__&#x27;: data = get_data() response = execjs.compile(js).call(&#x27;get_data&#x27;,data) print(response)","categories":[{"name":"逆向","slug":"逆向","permalink":"http://tuhou.github.io/categories/%E9%80%86%E5%90%91/"}],"tags":[{"name":"爬虫","slug":"爬虫","permalink":"http://tuhou.github.io/tags/%E7%88%AC%E8%99%AB/"}]}],"categories":[{"name":"教程","slug":"教程","permalink":"http://tuhou.github.io/categories/%E6%95%99%E7%A8%8B/"},{"name":"瞎折腾","slug":"瞎折腾","permalink":"http://tuhou.github.io/categories/%E7%9E%8E%E6%8A%98%E8%85%BE/"},{"name":"postgresql","slug":"postgresql","permalink":"http://tuhou.github.io/categories/postgresql/"},{"name":"hexo","slug":"hexo","permalink":"http://tuhou.github.io/categories/hexo/"},{"name":"逆向","slug":"逆向","permalink":"http://tuhou.github.io/categories/%E9%80%86%E5%90%91/"}],"tags":[{"name":"docker","slug":"docker","permalink":"http://tuhou.github.io/tags/docker/"},{"name":"RustDesk","slug":"RustDesk","permalink":"http://tuhou.github.io/tags/RustDesk/"},{"name":"远程协助","slug":"远程协助","permalink":"http://tuhou.github.io/tags/%E8%BF%9C%E7%A8%8B%E5%8D%8F%E5%8A%A9/"},{"name":"postgresql","slug":"postgresql","permalink":"http://tuhou.github.io/tags/postgresql/"},{"name":"MIMIC","slug":"MIMIC","permalink":"http://tuhou.github.io/tags/MIMIC/"},{"name":"hexo","slug":"hexo","permalink":"http://tuhou.github.io/tags/hexo/"},{"name":"爬虫","slug":"爬虫","permalink":"http://tuhou.github.io/tags/%E7%88%AC%E8%99%AB/"}]}